{"version":3,"sources":["components/streams/StreamList.js"],"names":["StreamList","this","props","requestStreams","stream","userId","currentUserId","console","log","className","to","id","streams","map","key","renderAdmin","title","description","isSignedIn","style","textAlign","role","width","float","renderCreate","renderStreamList","React","Component","connect","state","Object","values","auth"],"mappings":"6MAKMA,E,4LAGEC,KAAKC,MAAMC,mB,kCAGHC,GACR,GAAIA,EAAOC,SAAWJ,KAAKC,MAAMI,cAE7B,OADAC,QAAQC,IAAI,UAaR,yBAAKC,UAAU,yBACX,kBAAC,IAAD,CAAMC,GAAE,wBAAmBN,EAAOO,IAAMF,UAAU,qBAAlD,QAGA,kBAAC,IAAD,CAAMC,GAAE,0BAAqBN,EAAOO,IAAMF,UAAU,sBAApD,a,yCASI,IAAD,OACf,OAAOR,KAAKC,MAAMU,QAAQC,IAAI,SAAAT,GAE1B,OADAG,QAAQC,IAAIJ,EAAOO,IAgBf,yBAAKF,UAAU,OAAOK,IAAKV,EAAOO,IAC7B,EAAKI,YAAYX,GAClB,uBAAGK,UAAU,6CACb,yBAAKA,UAAU,WACX,kBAAC,IAAD,CAAMC,GAAE,mBAAcN,EAAOO,IAAMF,UAAU,UAAUL,EAAOY,OAC9D,yBAAKP,UAAU,eAAeL,EAAOa,mB,qCASrD,GAAIhB,KAAKC,MAAMgB,WACX,OACI,yBAAKC,MAAO,CAAEC,UAAW,SAAWX,UAAU,yBAC1C,kBAAC,IAAD,CAAMC,GAAG,eAAeD,UAAU,sBAAlC,oB,+BAQZ,OADAF,QAAQC,IAAIP,KAAKC,MAAMU,SAEnB,6BACI,yBAAKS,KAAK,OAAOZ,UAAU,kCAAkCU,MAAO,CAAEG,MAAO,SACzE,yBAAKD,KAAK,WAAWZ,UAAU,QAC3B,wBAAIA,UAAU,0BAAd,YAEJ,yBAAKY,KAAK,WAAWZ,UAAU,qBAAqBU,MAAO,CAAEI,MAAO,UAC/DtB,KAAKuB,iBASd,yBAAKf,UAAU,kBACVR,KAAKwB,yB,GA9FDC,IAAMC,WA8GhBC,sBATS,SAACC,GACrB,MAAO,CACHjB,QAASkB,OAAOC,OAAOF,EAAMjB,SAC7BN,cAAeuB,EAAMG,KAAK3B,OAC1Ba,WAAYW,EAAMG,KAAKd,aAKS,CAAEf,oBAA3ByB,CAA6C5B","file":"static/js/4.1fa13f65.chunk.js","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from \"react-router-dom\";\r\nimport { requestStreams } from '../../actions/index';\r\n\r\nclass StreamList extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.requestStreams();\r\n    }\r\n\r\n    renderAdmin(stream) {\r\n        if (stream.userId === this.props.currentUserId) {\r\n            console.log(\"trueee\")\r\n            return (\r\n                // <div className=\"extra content\">\r\n                //     <div className=\"ui two buttons\">\r\n                //         <Link to={`/streams/edit/${stream.id}`} className=\"ui green basic button\">\r\n                //             Edit\r\n                //     </Link>\r\n                //         <Link to={`/streams/delete/${stream.id}`} className=\"ui red basic button\">\r\n                //             Delete\r\n                //     </Link>\r\n\r\n                //     </div>\r\n                // </div>\r\n                <div className=\"right floated content\">\r\n                    <Link to={`/streams/edit/${stream.id}`} className=\"ui button primary\">\r\n                        Edit\r\n                    </Link>\r\n                    <Link to={`/streams/delete/${stream.id}`} className=\"ui button negative\">\r\n                        Delete\r\n                    </Link>\r\n                </div>\r\n            );\r\n        }\r\n\r\n    }\r\n\r\n    renderStreamList() {\r\n        return this.props.streams.map(stream => {\r\n            console.log(stream.id);\r\n            return (\r\n                // <div className=\"column\" key={stream.id}>\r\n                //     <div className=\"ui link card\">\r\n                //         <div className=\"content\">\r\n                //             <div className=\"header\">\r\n                //                 <Link to={`/streams/${stream.id}`} className=\"header\">{stream.title}</Link>\r\n                //             </div>\r\n                //             {/* <div className=\"meta\">Scientist</div> */}\r\n                //             <div className=\"description\">\r\n                //                 {stream.description}\r\n                //             </div>\r\n                //             {this.renderAdmin(stream)}\r\n                //         </div>\r\n                //     </div>\r\n                // </div>\r\n                <div className=\"item\" key={stream.id}>\r\n                    {this.renderAdmin(stream)}\r\n                    <i className=\"large divided middle aligned icon camera\" />\r\n                    <div className=\"content\">\r\n                        <Link to={`/streams/${stream.id}`} className=\"header\">{stream.title}</Link>\r\n                        <div className=\"description\">{stream.description}</div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n\r\n    renderCreate() {\r\n        if (this.props.isSignedIn) {\r\n            return (\r\n                <div style={{ textAlign: 'right' }} className=\"right floated content\">\r\n                    <Link to=\"/streams/new\" className=\"ui button positive\">Create Stream</Link>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    render() {\r\n        console.log(this.props.streams);\r\n        return (\r\n            <div>\r\n                <div role=\"list\" className=\"ui horizontal very relaxed list\" style={{ width: '100%' }}>\r\n                    <div role=\"listitem\" className=\"item\">\r\n                        <h2 className=\"ui left floated header\">Streams</h2>\r\n                    </div>\r\n                    <div role=\"listitem\" className=\"item right floated\" style={{ float: 'right' }}>\r\n                        {this.renderCreate()}\r\n                    </div>\r\n                </div>\r\n                {/* <div className=\"headerSpacing\"> \r\n                    \r\n                </div> */}\r\n                {/* <div className=\"ui container four column grid\">\r\n                    {this.renderStreamList()}\r\n                </div> */}\r\n                <div className=\"ui celled list\">\r\n                    {this.renderStreamList()}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        streams: Object.values(state.streams),\r\n        currentUserId: state.auth.userId,\r\n        isSignedIn: state.auth.isSignedIn\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, { requestStreams })(StreamList);"],"sourceRoot":""}