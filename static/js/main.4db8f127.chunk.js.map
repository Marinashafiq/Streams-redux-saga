{"version":3,"sources":["actions/index.js","actions/types.js","components/Modal.js","history.js","components/streams/StreamDelete.js","components/streams/StreamEdit.js","components/streams/StreamShow.js","components/GoogleAuth.js","components/Header.js","locale/messages.js","Auth.js","components/App.js","reducers/authReducer.js","reducers/localeReducer.js","reducers/index.js","reducers/streamReducer.js","interceptor.js","apis/streams.js","apis.js","sagas.js","index.js","components/streams/StreamForm.js"],"names":["signIn","userId","type","SIGN_IN","payload","signOut","SIGN_OUT","requestStreams","REQUEST_STREAMS","requestStream","id","REQUEST_STREAM","requestUpdateStream","data","REQUEST_UPDATE_STREAM","requestNewStream","store","getState","auth","REQUEST_NEW_STREAM","requestDelete","REQUEST_DELETE_STREAM","setCurrentLang","lang","SET_CURRENT_LANG","getCurrentLang","GET_CURRENT_LANG","RECEIVE_STREAMS","RECEIVE_STREAM","UPDATE_STREAM","NEW_STREAM","Modal","props","ReactDOM","createPortal","onClick","onDismiss","className","e","stopPropagation","title","content","actions","document","querySelector","createBrowserHistory","StreamDelete","console","log","this","match","params","Fragment","to","stream","renderContent","renderActions","history","push","React","Component","connect","state","ownProps","streams","StreamEdit","onSubmit","formValues","StreamForm","initialValues","_","pick","StreamShow","description","GoogleAuth","onSignIn","onSignOut","onAuthChange","isSignedIn","currentUser","get","getId","window","gapi","load","client","init","clientId","scope","then","auth2","getAuthInstance","listen","renderAuthButton","Header","switcher","renderLangSwitcher","messages","intl","goStreams","HeaderComponent","injectIntl","locale","en","ar","Auth","getAuth","StreamCreate","lazy","StreamList","App","fallback","path","exact","component","PrivateRoute","rest","render","pathname","from","location","INITIAL_STATE","initialState","localStorage","getItem","combineReducers","action","form","formReducer","mapKeys","omit","isHandlerEnabled","config","hasOwnProperty","handlerEnabled","errorHandler","error","alert","Promise","reject","axios","create","baseURL","interceptors","request","use","requestHandler","response","successHandler","getStreams","a","getStream","addStream","post","editStream","patch","deleteStream","delete","createStream","updateStream","removeStream","mySaga","call","api","put","takeLatest","sagaMiddleware","createSagaMiddleware","addLocaleData","composeEnchancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducers","applyMiddleware","run","getElementById","renderInput","input","label","meta","touched","renderError","handleSubmit","name","reduxForm","validate","errors"],"mappings":"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","file":"static/js/main.4db8f127.chunk.js","sourcesContent":["import {\r\n    SIGN_IN,\r\n    SIGN_OUT,\r\n    RECEIVE_STREAMS,\r\n    REQUEST_STREAMS,\r\n    RECEIVE_STREAM,\r\n    REQUEST_STREAM,\r\n    UPDATE_STREAM,\r\n    NEW_STREAM,\r\n    REQUEST_DELETE_STREAM,\r\n    REQUEST_NEW_STREAM,\r\n    REQUEST_UPDATE_STREAM,\r\n    SET_CURRENT_LANG,\r\n    GET_CURRENT_LANG,\r\n} from './types';\r\n\r\nimport { store } from '../index';\r\n\r\n\r\n\r\nexport const signIn = userId => {\r\n\r\n    return {\r\n        type: SIGN_IN,\r\n        payload: userId\r\n    };\r\n}\r\n\r\n\r\nexport const signOut = () => {\r\n    return {\r\n        type: SIGN_OUT\r\n    };\r\n}\r\n\r\n// GET ALL STREAMS\r\nexport const requestStreams = () => ({ type: REQUEST_STREAMS });\r\nexport const receiveStreams = data => ({ type: RECEIVE_STREAMS, payload: data });\r\n\r\n// GET STREAM DETAILS\r\nexport const requestStream = id => ({ type: REQUEST_STREAM, id });\r\nexport const receiveStream = data => ({ type: RECEIVE_STREAM, payload: data });\r\n\r\n// EDIT STREAM DETAILS\r\nexport const updateStream = (id, data) => ({ type: UPDATE_STREAM, payload: { data, id } });\r\nexport const requestUpdateStream = (id, data) => ({ type: REQUEST_UPDATE_STREAM, payload: { data, id } });\r\n\r\n// ADD NEW STREAM WITH AUTH\r\nexport const requestNewStream = data => {\r\n    const { userId } = store.getState().auth\r\n    return { type: REQUEST_NEW_STREAM, payload: { ...data, userId } };\r\n}\r\n\r\nexport const newStream = data => {\r\n    const { userId } = store.getState().auth\r\n    return { type: NEW_STREAM, payload: { ...data, userId } }\r\n};\r\n\r\n// DELETE STREAM\r\nexport const requestDelete = id => ({ type: REQUEST_DELETE_STREAM, payload: id });\r\n// export const deleteStream = id => ({ type: DELETE_STREAM, payload: id })\r\n\r\n// LOCALIZATION\r\nexport const setCurrentLang = lang => ({ type: SET_CURRENT_LANG, payload: lang });\r\nexport const getCurrentLang = () => ({ type: GET_CURRENT_LANG });\r\n\r\n\r\n\r\n\r\n\r\n","export const SIGN_IN = 'SIGN_IN';\r\nexport const SIGN_OUT = 'SIGN_OUT';\r\n\r\nexport const RECEIVE_STREAMS = \"RECEIVE_STREAMS\";\r\nexport const REQUEST_STREAMS = \"REQUEST_STREAMS\";\r\n\r\nexport const RECEIVE_STREAM = \"RECEIVE_STREAM\";\r\nexport const REQUEST_STREAM = \"REQUEST_STREAM\";\r\n\r\nexport const UPDATE_STREAM = \"UPDATE_STREAM\";\r\nexport const REQUEST_UPDATE_STREAM = \"REQUEST_UPDATE_STREAM\";\r\n\r\n\r\nexport const NEW_STREAM = \"NEW_STREAM\";\r\nexport const REQUEST_NEW_STREAM = \"REQUEST_NEW_STREAM\";\r\n\r\n\r\nexport const REQUEST_DELETE_STREAM = \"REQUEST_DELETE_STREAM\";\r\nexport const DELETE_STREAM = \"DELETE_STREAM\";\r\n\r\n\r\nexport const SET_CURRENT_LANG = \"SET_CURRENT_LANG\";\r\nexport const GET_CURRENT_LANG = \"GET_CURRENT_LANG\"\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nconst Modal = props => {\r\n    return ReactDOM.createPortal(\r\n        <div onClick={props.onDismiss} className=\"ui dimmer modals visible active\">\r\n            <div onClick={e => e.stopPropagation()} className=\"ui standard modal visible active\">\r\n                <div className=\"header\">{props.title}</div>\r\n                <div className=\"content\">\r\n                    <p>{props.content}</p>\r\n                </div>\r\n                <div className=\"actions\">\r\n                    {props.actions}\r\n                </div>\r\n            </div>\r\n        </div>,\r\n        document.querySelector('#modal')\r\n    )\r\n}\r\n\r\nexport default Modal;","import { createBrowserHistory } from 'history'; \r\nexport default createBrowserHistory();","import React from 'react';\r\nimport Modal from '../Modal';\r\nimport history from '../../history';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from \"react-router-dom\";\r\nimport { requestStream, requestDelete } from '../../actions/index';\r\n\r\nclass StreamDelete extends React.Component {\r\n\r\n    componentDidMount() {\r\n        console.log(this.props);\r\n        this.props.requestStream(this.props.match.params.id);\r\n    }\r\n\r\n    renderActions() {\r\n        const id = this.props.match.params.id;\r\n        return (\r\n            <React.Fragment>\r\n                <button className=\"ui negative button\" onClick={() => this.props.requestDelete(id)}>Delete</button>\r\n                <Link className=\"ui cancel button\" to=\"/\">Cancel</Link>\r\n            </React.Fragment >\r\n        )\r\n    }\r\n\r\n    renderContent() {\r\n        if (!this.props.stream) {\r\n            return 'Are you sure you want to delete this stream ?'\r\n        } else {\r\n            return `Are you sure you want to delete the stream with title ${this.props.stream.title} ?`\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                Stream Delete\r\n                <Modal\r\n                    title=\"Delete Stream\"\r\n                    content={this.renderContent()}\r\n                    actions={this.renderActions()}\r\n                    onDismiss={() => history.push('/')}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    console.log(ownProps);\r\n    console.log(state);\r\n    return { stream: state.streams[ownProps.match.params.id] }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, { requestStream, requestDelete })(StreamDelete);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport StreamForm from './StreamForm';\r\nimport _ from 'lodash';\r\nimport { requestStream, requestUpdateStream } from '../../actions/index';\r\n\r\n\r\nclass StreamEdit extends React.Component {\r\n    componentDidMount() {\r\n        this.props.requestStream(this.props.match.params.id);\r\n    }\r\n\r\n    onSubmit = (formValues) => {\r\n        console.log(formValues);\r\n        this.props.requestUpdateStream(this.props.match.params.id, formValues)\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.stream) {\r\n            return <div>Loading ... </div>\r\n        }\r\n        return (\r\n            <div>\r\n                <h3>Edit Stream</h3>\r\n                <StreamForm initialValues={_.pick(this.props.stream, 'title', 'description')} onSubmit={this.onSubmit} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    console.log(ownProps);\r\n    console.log(state);\r\n    return { stream: state.streams[ownProps.match.params.id] }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, { requestStream, requestUpdateStream })(StreamEdit);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { requestStream } from '../../actions/index';\r\n\r\nclass StreamShow extends React.Component {\r\n\r\n    componentDidMount() {\r\n        console.log(this.props);\r\n        this.props.requestStream(this.props.match.params.id);\r\n\r\n    }\r\n\r\n    renderContent() {\r\n\r\n        if (!this.props.stream) {\r\n            return (\r\n                <div>\r\n                    ...Loading\r\n                    </div>\r\n            )\r\n        }\r\n        return (\r\n\r\n            <div>\r\n                <h1>{this.props.stream.title}</h1>\r\n                <h5>{this.props.stream.description}</h5>\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n    render() {\r\n        { console.log(this.props.stream) }\r\n        return <div>{this.renderContent()}</div>\r\n    }\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    console.log(ownProps);\r\n    console.log(state);\r\n    console.log(state.streams);\r\n    return { stream: state.streams[ownProps.match.params.id] };\r\n}\r\n\r\nexport default connect(mapStateToProps, { requestStream })(StreamShow);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { signIn , signOut } from '../actions';\r\n\r\nclass GoogleAuth extends React.Component {\r\n\r\n    componentDidMount() {\r\n        window.gapi.load('client:auth2', () => {\r\n            window.gapi.client.init({\r\n                clientId: '531338673112-u585rr4o2dvqe3qsn84rne8n93jktj1c.apps.googleusercontent.com',\r\n                scope: 'email'\r\n            }).then(() => {\r\n                this.auth = window.gapi.auth2.getAuthInstance();\r\n                this.onAuthChange(this.auth.isSignedIn.get())\r\n                this.auth.isSignedIn.listen(this.onAuthChange)\r\n            })\r\n        });\r\n    }\r\n\r\n\r\n    renderAuthButton() {\r\n        if (this.props.isSignedIn == null) {\r\n            return null\r\n        } else if (this.props.isSignedIn) {\r\n            return (\r\n                <button onClick={this.onSignOut} className=\"ui red google button\">\r\n                    <i className=\"google icon\"/>\r\n                    Sign Out\r\n                </button>\r\n            );\r\n        } else {\r\n            return (\r\n                <button onClick={this.onSignIn} className=\"ui red google button\">\r\n                    <i className=\"google icon\"/>\r\n                    Sign in with Google\r\n                </button>\r\n            );\r\n        }\r\n    }\r\n\r\n    onSignIn = () => {\r\n        this.auth.signIn();\r\n    }\r\n\r\n    onSignOut = () => {\r\n        this.auth.signOut();\r\n    }\r\n\r\n    onAuthChange = (isSignedIn) =>{\r\n        if(isSignedIn){\r\n            // Get Id to know which user is logged in\r\n            this.props.signIn(this.auth.currentUser.get().getId());\r\n        }\r\n        else{\r\n            this.props.signOut();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <div>{this.renderAuthButton()}</div>\r\n    }\r\n}\r\n\r\n    const mapStateToProps = (state) => {\r\n        return { isSignedIn : state.auth.isSignedIn }\r\n    }\r\n\r\nexport default connect( mapStateToProps , {signIn , signOut})(GoogleAuth);","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport GoogleAuth from './GoogleAuth';\r\nimport { setCurrentLang, getCurrentLang } from '../actions/index';\r\nimport { injectIntl } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Header extends React.Component {\r\n\r\n    componentDidMount() {\r\n        console.log(this.props);\r\n    }\r\n    switcher = (lang) => {\r\n        console.log(lang);\r\n        if (lang == 'ar') {\r\n            this.props.setCurrentLang('en');\r\n        }\r\n        else {\r\n            this.props.setCurrentLang('ar');\r\n        }\r\n    }\r\n\r\n    renderLangSwitcher = () => {\r\n        console.log(this.props.lang);\r\n        return (\r\n            <div className=\"m-3\">\r\n                <button id=\"en\" className=\"ui button\" onClick={() => this.switcher('en')}>English</button>\r\n                <button id=\"ar\" className=\"ui button\" onClick={() => this.switcher('ar')}>العربية</button>\r\n                <button id=\"ar\" className=\"ui button\" onClick={() => this.switcher(this.props.lang)}>{this.props.lang == 'ar' ? 'العربية' : 'English'}</button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const { messages } = this.props.intl;\r\n        return (\r\n            <div className=\"ui secondary pointing menu\">\r\n                {this.renderLangSwitcher()}\r\n                <Link to=\"/\" className=\"item\">\r\n                    {/* Streams */}\r\n                    {messages.streams}\r\n                </Link>\r\n                <div className=\"right menu\">\r\n                    <Link to=\"/\" className=\"item\">\r\n                        {messages.goStreams}\r\n                    </Link>\r\n                    <GoogleAuth />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n};\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    console.log(state);\r\n    return { lang: state.locale.lang }\r\n}\r\n\r\nconst HeaderComponent = injectIntl(Header);\r\n\r\nexport default connect(mapStateToProps, { setCurrentLang, getCurrentLang })(HeaderComponent);\r\n// export default Header;","export default {\r\n    en: {\r\n        streams: 'Streams',\r\n        goStreams: 'Go to streams',\r\n    },\r\n    ar: {\r\n        streams: 'ستريمز',\r\n        goStreams: 'الذهاب الى كل ستريمز',\r\n    }\r\n}","import { store } from './index';\r\n\r\n\r\nconst Auth = {\r\n    getAuth() {\r\n        const state = store.getState().auth;\r\n        console.log(state.isSignedIn);\r\n        return state.isSignedIn;\r\n    }\r\n};\r\nexport default Auth;","import React, { lazy, Suspense } from 'react';\r\nimport { Router, Route, Switch, Redirect } from \"react-router-dom\";\r\n// import StreamCreate from './streams/StreamCreate';\r\nimport StreamDelete from './streams/StreamDelete';\r\nimport StreamEdit from './streams/StreamEdit';\r\n// import StreamList from './streams/StreamList';\r\nimport StreamShow from './streams/StreamShow';\r\nimport Header from './Header';\r\nimport history from '../history';\r\nimport { IntlProvider } from 'react-intl';\r\nimport messages from '../locale/messages';\r\nimport { connect } from 'react-redux';\r\nimport Auth from \"../Auth\";\r\nconst StreamCreate = lazy(() => import('./streams/StreamCreate'));\r\nconst StreamList = lazy(() => import('./streams/StreamList'));\r\n\r\n\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    const { lang } = this.props;\r\n    console.log(lang);\r\n    return (\r\n      <IntlProvider\r\n        locale={lang}\r\n        messages={messages[lang]}\r\n      >\r\n        <div className=\"ui container\">\r\n          <Router history={history}>\r\n            <div>\r\n              <Header />\r\n              <Suspense fallback={<h1>Still Loading…</h1>}>\r\n                <Switch>\r\n                  <StreamList path=\"/\" exact />\r\n                  <StreamCreate path=\"/streams/new\" exact />\r\n                  <PrivateRoute path=\"/streams/:id\" exact component={StreamShow} />\r\n                  <Route path=\"/streams/edit/:id\" exact component={StreamEdit}></Route>\r\n                  <Route path=\"/streams/delete/:id\" exact component={StreamDelete}></Route>\r\n                </Switch>\r\n              </Suspense>\r\n            </div>\r\n          </Router>\r\n        </div>\r\n      </IntlProvider>\r\n\r\n    )\r\n  }\r\n\r\n}\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n  // console.log(this.props.auth.isSignedIn);\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        Auth.getAuth() === true\r\n          ? <Component {...props} />\r\n          : <Redirect to={{ pathname: '/', state: { from: props.location } }} />}\r\n    />\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  console.log(state);\r\n  return {\r\n    auth: state.auth,\r\n    lang: state.locale.lang\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","import { SIGN_IN , SIGN_OUT } from '../actions/types';\r\n\r\n\r\nconst INITIAL_STATE = {\r\n    isSignedIn : null ,\r\n    userId : null\r\n};\r\n\r\nexport default (state = INITIAL_STATE , action) => {\r\n    switch (action.type) {\r\n        case SIGN_IN :\r\n            return { ...state , isSignedIn : true , userId : action.payload};\r\n        case SIGN_OUT :\r\n            return { ...state , isSignedIn : false , userId : null };\r\n        default :\r\n            return state ;\r\n    }\r\n}","import {\r\n    SET_CURRENT_LANG,\r\n    GET_CURRENT_LANG\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    lang: localStorage.getItem('lang') || 'en'\r\n};\r\n\r\nexport default function locale(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_CURRENT_LANG:\r\n            return {\r\n                ...state,\r\n                lang: action.payload\r\n            };\r\n        case GET_CURRENT_LANG:\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n};","import { combineReducers } from 'redux';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport authReducer from './authReducer';\r\nimport streamReducer from './streamReducer';\r\nimport localeReducer from './localeReducer';\r\n\r\n\r\nexport default combineReducers({\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    streams: streamReducer,\r\n    locale: localeReducer\r\n})","import _ from 'lodash';\r\n\r\nimport {\r\n    RECEIVE_STREAMS,\r\n    RECEIVE_STREAM,\r\n    UPDATE_STREAM,\r\n    NEW_STREAM,\r\n    DELETE_STREAM,\r\n    REQUEST_DELETE_STREAM\r\n} from '../actions/types';\r\n\r\nexport default (state = {}, action) => {\r\n    console.log(action)\r\n    switch (action.type) {\r\n        case RECEIVE_STREAMS:\r\n            return { ...state, ..._.mapKeys(action.payload, 'id') };\r\n        case NEW_STREAM:\r\n            return { ...state, [action.payload.id]: action.payload };\r\n        case RECEIVE_STREAM:\r\n            return { ...state, [action.payload.id]: action.payload };\r\n        case UPDATE_STREAM:\r\n            return { ...state, [action.payload.id]: action.payload };\r\n        case REQUEST_DELETE_STREAM:\r\n            return _.omit(state, action.payload);\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n// export const streamsReducer = (state = {}, { type, data }) => {\r\n//     switch (type) {\r\n//         case RECEIVE_STREAMS:\r\n//             return data;\r\n//         default:\r\n//             return state;\r\n//     }\r\n// }\r\n\r\n// export const streamReducer = (state = {}, { type, data }) => {\r\n//     switch (type) {\r\n//         case RECEIVE_STREAM:\r\n//             return data;\r\n//         case UPDATE_STREAM:\r\n//             return data;\r\n//         case NEW_STREAM:\r\n//             return data;\r\n//         case REQUEST_DELETE_STREAM:\r\n//             return data;\r\n//         default:\r\n//             return state;\r\n//     }\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n","\r\n\r\nconst isHandlerEnabled = (config = {}) => {\r\n    return config.hasOwnProperty('handlerEnabled') && !config.handlerEnabled ?\r\n        false : true\r\n}\r\n\r\n\r\nexport const requestHandler = (request) => {\r\n    if (isHandlerEnabled(request)) {\r\n        console.log(\"REQUEEST IS ON\");\r\n    }\r\n    return request\r\n}\r\n\r\nexport const errorHandler = (error) => {\r\n    if (isHandlerEnabled(error.config)) {\r\n        alert(\"EROOOOR\");\r\n        console.log(\"HANDLEDDD\");\r\n    }\r\n    return Promise.reject({ ...error })\r\n}\r\n\r\nexport const successHandler = (response) => {\r\n    if (isHandlerEnabled(response.config)) {\r\n        alert(\"SUCESSS\");\r\n        console.log(\"HANDLEDDD MARINAA INTERCEPTOR\");\r\n\r\n    }\r\n    return response\r\n}\r\n","import axios from 'axios';\r\nimport { requestHandler, errorHandler, successHandler } from '../interceptor';\r\n\r\n\r\nconst streams = axios.create({\r\n    baseURL: `http://localhost:3001`\r\n});\r\n\r\n\r\n\r\n// Add interceptors\r\nstreams.interceptors.request.use(request => requestHandler(request))\r\n\r\nstreams.interceptors.response.use(\r\n    response => successHandler(response),\r\n    error => errorHandler(error)\r\n)\r\n\r\nexport default streams;","import streams from './apis/streams';\r\n\r\nlet handlerEnabled = true;\r\nconst getStreams = async () => await streams.get('/streams', { handlerEnabled });\r\nconst getStream = async (id) => await streams.get(`/streams/${id}`);\r\nconst addStream = async data => await streams.post(`/streams`, data);\r\nconst editStream = async (payload) => await streams.patch(`/streams/${payload.id}`, payload.data);\r\nconst deleteStream = async id => {\r\n    console.log(id);\r\n    return await streams.delete(`/streams/${id}`)\r\n};\r\n\r\n\r\nexport default { getStreams, getStream, addStream, editStream, deleteStream };","import { call, put, takeLatest } from 'redux-saga/effects';\r\nimport {\r\n    RECEIVE_STREAMS, REQUEST_STREAMS, RECEIVE_STREAM, REQUEST_STREAM, UPDATE_STREAM,\r\n    NEW_STREAM,\r\n    REQUEST_DELETE_STREAM,\r\n    REQUEST_NEW_STREAM,\r\n    REQUEST_UPDATE_STREAM,\r\n    DELETE_STREAM\r\n} from './actions/types';\r\nimport api from \"./apis\";\r\n\r\nimport history from './history';\r\nfunction* getStreams() {\r\n    try {\r\n        const response = yield call(api.getStreams);\r\n        // console.log(response);\r\n        yield put({ type: RECEIVE_STREAMS, payload: response.data });\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n}\r\n\r\n\r\nfunction* getStream(action) {\r\n    try {\r\n        const { id } = action;\r\n        const response = yield call(api.getStream, id);\r\n        // console.log(response);\r\n        yield put({ type: RECEIVE_STREAM, payload: response.data });\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n}\r\n\r\nfunction* createStream(action) {\r\n    console.log(action);\r\n    try {\r\n        const { payload } = action;\r\n        const response = yield call(api.addStream, payload);\r\n        // const response = yield call(api.getStreams);\r\n        console.log(response);\r\n        yield put({ type: NEW_STREAM, payload: response.data });\r\n        history.push('/');\r\n\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n}\r\n\r\n/**\r\n * Update a stream\r\n * @param {*} action \r\n */\r\nfunction* updateStream(action) {\r\n    try {\r\n        const { payload } = action;\r\n        console.log(payload);\r\n        const response = yield call(api.editStream, payload);\r\n        // const response = yield call(api.posts);\r\n        console.log(response);\r\n        yield put({ type: UPDATE_STREAM, payload: response.data });\r\n\r\n        history.push('/');\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n}\r\n\r\n/**\r\n * Delete a post by a post id\r\n * @param {*} action \r\n */\r\nfunction* removeStream(action) {\r\n    try {\r\n        console.log(action);\r\n        const { payload } = action;\r\n        yield call(api.deleteStream, payload);\r\n        history.push('/');\r\n        const response = yield call(api.getStreams);\r\n        console.log(response);\r\n        yield put({ type: RECEIVE_STREAMS, payload: response.data });\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n}\r\n\r\n\r\n\r\n/**\r\n * Get all the posts\r\n */\r\n// function* getPosts() {\r\n//     try {\r\n//         const response = yield call(api.posts);\r\n//         yield put({ type: RECEIVE_POSTS, data: response.data });\r\n//     } catch (err) {\r\n//         console.log(err);\r\n//     }\r\n// }\r\n\r\n/**\r\n * Get all the posts\r\n */\r\n\r\n/**\r\n * Get a post by post id\r\n * @param {*} action \r\n */\r\n// function* getPost(action) {\r\n//     try {\r\n//         const { id } = action;\r\n//         const response = yield call(api.getPost, id);\r\n//         yield put({ type: RECEIVE_POST, data: response.data });\r\n//     } catch (err) {\r\n//         console.log(err);\r\n//     }\r\n// }\r\n\r\n/**\r\n * Delete a post by a post id\r\n * @param {*} action \r\n */\r\n// function* removePost(action) {\r\n//     try {\r\n//         const { id } = action;\r\n//         yield call(api.deletePost, id);\r\n//         const response = yield call(api.posts);\r\n//         yield put({ type: RECEIVE_POSTS, data: response.data });\r\n//     } catch (err) {\r\n//         console.log(err);\r\n//     }\r\n// }\r\n\r\n/**\r\n * Create a new post\r\n * @param {*} action \r\n */\r\n// function* createPost(action) {\r\n//     try {\r\n//         const { data } = action;\r\n//         yield call(api.addPost, data);\r\n//         const response = yield call(api.posts);\r\n//         yield put({ type: RECEIVE_POSTS, data: response.data });\r\n//     } catch (err) {\r\n//         console.log(err);\r\n//     }\r\n// }\r\n\r\n/**\r\n * Update a post\r\n * @param {*} action \r\n */\r\n// function* updatePost(action) {\r\n//     try {\r\n//         const { data } = action;\r\n//         yield call(api.editPost, data);\r\n//         const response = yield call(api.posts);\r\n//         yield put({ type: RECEIVE_POSTS, data: response.data });\r\n//     } catch (err) {\r\n//         console.log(err);\r\n//     }\r\n// }\r\n\r\n// Get the response of the latest request(s) \r\nexport default function* mySaga() {\r\n    yield takeLatest(REQUEST_STREAMS, getStreams);\r\n    yield takeLatest(REQUEST_STREAM, getStream);\r\n    yield takeLatest(REQUEST_NEW_STREAM, createStream);\r\n    yield takeLatest(REQUEST_UPDATE_STREAM, updateStream);\r\n    yield takeLatest(REQUEST_DELETE_STREAM, removeStream);\r\n    // yield takeLatest(REQUEST_POSTS, getPosts);\r\n    // yield takeLatest(REQUEST_POST, getPost);\r\n    // yield takeLatest(NEW_POST, createPost);\r\n    // yield takeLatest(UPDATE_POST, updatePost);\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport App from './components/App';\r\nimport reducers from './reducers';\r\n\r\n// import { createStore, applyMiddleware } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\n// import reducers from './reducers';\r\nimport mySaga from './sagas';\r\n\r\nimport { addLocaleData } from 'react-intl';\r\nimport * as en from 'react-intl/locale-data/en';\r\nimport * as ar from 'react-intl/locale-data/ar';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\n// mount it on the Store\r\n// const store = createStore(reducers, applyMiddleware(sagaMiddleware));\r\n\r\n// Run the saga\r\naddLocaleData(en);\r\naddLocaleData(ar);\r\nconst composeEnchancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nexport const store = createStore(reducers, composeEnchancers(applyMiddleware(sagaMiddleware)));\r\nsagaMiddleware.run(mySaga);\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById('root'));\r\n\r\n","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\n\r\nclass StreamForm extends React.Component {\r\n\r\n    renderError({ error, touched }) {\r\n        if (touched && error) {\r\n            return (\r\n                <div className=\"ui error message\">\r\n                    <div className=\"header\">{error}</div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    renderInput = ({ input, label, meta }) => {\r\n        console.log(meta);\r\n        const className = `field ${meta.error && meta.touched ? 'error' : ''}`\r\n        return (\r\n            <div className={className}>\r\n                <label> {label} </label>\r\n                <input {...input} />\r\n                {this.renderError(meta)}\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n    onSubmit = (formValues) => {\r\n        console.log(formValues);\r\n        this.props.onSubmit(formValues);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"ui form error\" onSubmit={this.props.handleSubmit(this.onSubmit)}>\r\n                <Field name=\"title\" component={this.renderInput} label=\"Enter Title\" />\r\n                <Field name=\"description\" component={this.renderInput} label=\"Enter Description\" />\r\n                <button className=\"ui button primary\">Submit</button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nconst validate = formValues => {\r\n    const errors = {};\r\n    if (!formValues.title) {\r\n        // only if user didn't enter a title\r\n        errors.title = \"You must enter a title\";\r\n    }\r\n\r\n    if (!formValues.description) {\r\n        errors.description = \"You must enter a description\";\r\n    }\r\n\r\n    return errors;\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'StreamForm',\r\n    validate\r\n})(StreamForm);\r\n"],"sourceRoot":""}